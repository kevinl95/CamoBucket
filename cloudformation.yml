AWSTemplateFormatVersion: '2010-09-09'
Description: CamoBucket - Automatically cloaks uploaded images using Fawkes, via S3 and Lambda

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket to create and use for input/output

Resources:

  CamoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: input/
            Function: !GetAtt FawkesFunction.Arn

  # Custom resource Lambda to create 'folders' in S3
  InitPrefixFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: InitCamoBucketFolders
      Handler: index.handler
      Role: !GetAtt InitPrefixFunctionRole.Arn
      Runtime: python3.8
      Timeout: 30
      Code:
        ZipFile: |
          import json
          import boto3

          def handler(event, context):
              s3 = boto3.client('s3')
              bucket = event['ResourceProperties']['Bucket']
              prefixes = ['input/', 'output/']
              for prefix in prefixes:
                  s3.put_object(Bucket=bucket, Key=prefix)
              return { 'PhysicalResourceId': f'{bucket}/initialized' }

  InitPrefixFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowS3Put
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub "${CamoBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  InitFolders:
    Type: Custom::InitPrefixes
    DependsOn: CamoBucket
    Properties:
      ServiceToken: !GetAtt InitPrefixFunction.Arn
      Bucket: !Ref BucketName

  FawkesLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FawkesS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "${CamoBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  FawkesFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CamoBucketProcessor
      Handler: lambda_function.lambda_handler
      Role: !GetAtt FawkesLambdaExecutionRole.Arn
      Runtime: python3.8
      Timeout: 900
      MemorySize: 2048
      Code:
        S3Bucket: <REPLACE_WITH_CODE_BUCKET>
        S3Key: <REPLACE_WITH_CODE_KEY>
      Layers:
        - !Ref FawkesLayer

  FawkesLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: FawkesDependencies
      Description: Dependencies for running Fawkes cloaking tool
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: <REPLACE_WITH_LAYER_BUCKET>
        S3Key: <REPLACE_WITH_LAYER_KEY>

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref FawkesFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt CamoBucket.Arn
